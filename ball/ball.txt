<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
</head>
<style type="text/css">
body{
	margin: 150px;
}
	canvas{
		box-shadow: 
	}
</style>
<body>
	<canvas  id="canvas" width= "1000" height= "600"; background-color: black; style="background-color: black"></canvas>
</body>
<script type="text/javascript" src="js/underscore-min.js"></script>
<script type="text/javascript">
	const canvas = document.getElementById('canvas')
	const ctx = canvas.getContext('2d')
    // canvas.style.cssText="width: 1000px;height: 600px; background-color: black"



	class Ball{
		constructor(x,y,color){
			this.x=x;
			this.y=y;
			this.color=color;
			this.r=40;
		}

       //绘制小球
		render(){
			ctx.save();
			ctx.beginPath();
			ctx.arc(this.x,this.y,this.r,0,Math.PI*2);
			ctx.fillStyle=this.color;
			ctx.fill();
			ctx.restore()
		}
	}
     //3-会移动的小球
     class MOveBall extends Ball{
          constructor(x,y,color){
          	super(x,y,color);//

          	//量的变化
          	this.dX = _.random(-5,5)
          	this.dY = _.random(-5,5)
          	this.dR = _.random(1,3)
          }
          upDate(){
          	this.x+=this.dX
          	this.y+=this.dY
          	this.r-=this.dR
          	if (this.r<0) {
          		this.r=0
          	}
          }
     }

    
	var ball=new Ball(50,50,"red");
	ball.render()


	// 4.实例化小球

	let ballArr=[];
	let colorArr=['red','green','blue','yellow','purple','pink','orange']


	// 5.监听鼠标移动
	canvas.addEventListener('mousemove',function (e) {
		
		
		ballArr.push(new MOveBall(e.offsetX,e.offsetY,colorArr[_.random(0,colorArr.length-1)]))
		console.log(ballArr)

	})

	//开启定时器 

	setInterval(function(){

      ctx.clearRect(0,0,canvas.width,canvas.height)
         for(let i=0;i<ballArr.length;i++){
           ballArr[i].render()
           ballArr[i].upDate()
         }
	},50)

</script>
</html>